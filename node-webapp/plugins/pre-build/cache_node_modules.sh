#!/bin/bash

# Cache node_modules. Symlink `node_modules` directories to a peristent cache
# dir so that they are kept when container is destroyed.

# Load common vars.
source ../../common.sh

cd ${PROJECT_ROOT};

# Find parent dirs for all package.json files that are not in a `node_modules`
# dir (we don't want to cache recursively).
NODE_MODULES_PARENT_DIR=`find . -name "package.json" -not -path \
  "**/node_modules/*" | xargs -I{} dirname {}`;

if [ -z ${NODE_MODULES_CACHE_DISABLED} ]; then
  pushd ${PROJECT_ROOT}

  for dir in ${NODE_MODULES_PARENT_DIR}; do
    pushd ${dir};

    # Make sure the cache dir exists.
    mkdir -p ${DEPLOY_CACHE_DIR}/${dir}/node_modules;
    # Unlink first to make sure we can symlink it (TODO: WTF?)
    unlink node_modules || true
    # Symlink the cache dir into our project (at the right place).
    ln -s ${DEPLOY_CACHE_DIR}/${dir}/node_modules ./ || true;

    echo "Installing node modules in `pwd`"

    npm install;
    npm prune;

    popd;
  done

  popd
fi

